# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    App\Controller\BO\:
        resource: '../src/Controller/BO'
        tags: ['controller.service_arguments']

#    App\Controller\API\:
#        resource: '../src/Controller/API'
#        tags: ['controller.service_arguments']

    App\Swagger\SwaggerDecorator:
        decorates: 'api_platform.swagger.normalizer.documentation'
        arguments: ['@App\Swagger\SwaggerDecorator.inner']
        autoconfigure: false

    user.repository:
        class: App\Repository\UserRepository
        factory: ["@doctrine", getRepository]
        arguments:
            - App\Entity\User

    acme_api.event.jwt_created_listener:
        class: App\Core\EventListener\JWTListener
        arguments: [ '@request_stack' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

    acme_api.event.jwt_decoded_listener:
        class: App\Core\EventListener\JWTListener
        arguments: [ '@request_stack' ]
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_decoded, method: onJWTDecoded }

    acme_api.event.authentication_success_listener:
        arguments: ['%lexik_jwt_authentication.token_ttl%']
        class: App\Core\EventListener\JWTListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }

    App\Core\EventSubscriber\RefreshTokenSubscriber:
        arguments: ['%gesdinet_jwt_refresh_token.ttl%']